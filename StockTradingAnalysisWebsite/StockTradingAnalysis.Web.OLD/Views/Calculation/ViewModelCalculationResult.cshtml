@model StockTradingAnalysis.Web.Models.CalculationResultViewModel

@if (Model != null && Model.Quotation != null && Model.Quotation.Count != 0)
{
    <div class="container">
        <div class="row">
            <div>
                @Html.LabelFor(model => Model.Crv):
                @Html.DisplayFor(model => Model.Crv)

                @Html.LabelFor(model => Model.PositionSize):
                @Html.DisplayFor(model => Model.PositionSize)

                @Html.LabelFor(model => Model.PointsToSl):
                @Html.DisplayFor(model => Model.PointsToSl)

                @Html.LabelFor(model => Model.PointsToBe):
                @Html.DisplayFor(model => Model.PointsToBe)

                @Html.LabelFor(model => Model.PointsToTp):
                @Html.DisplayFor(model => Model.PointsToTp)

                @Html.LabelFor(model => Model.Atr):
                @Html.DisplayFor(model => Model.Atr)
            </div>
        </div>
        <div class="row no-gutters">
            <div class="col">
                <table class="table table-hover table-striped table-sm">
                    <thead>
                        <tr>
                            <th>
                                @Html.LabelFor(item => Model.Quotation.FirstOrDefault().Quotation)
                            </th>
                            @if (Model.IsUnderlyingUsed)
                            {
                                <th>
                                    @Html.LabelFor(item => Model.Quotation.FirstOrDefault().QuotationUnderlying)
                                </th>
                            }
                            <th>
                                @Html.LabelFor(item => Model.Quotation.FirstOrDefault().PlAbsolute)
                            </th>
                            <th>
                                @Html.LabelFor(item => Model.Quotation.FirstOrDefault().PlPercentage)
                            </th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.FirstPart)
                    {
                        var styleClass = string.Empty;

                        if (item.IsStoppLoss)
                        {
                            styleClass = "table-danger";
                        }
                        else if (item.IsBuy)
                        {
                            styleClass = "table-success";
                        }
                        else if (item.IsBreakEven)
                        {
                            styleClass = "table-warning";
                        }
                        else if (item.IsTakeProfit)
                        {
                            styleClass = "table-info";
                        }
                        else if (item.IsCurrentQuotation)
                        {
                            styleClass = "table-active";
                        }

                        <tr class="@styleClass">
                            <td>
                                @Html.DisplayFor(modelItem => item.Quotation)
                            </td>
                            @if (Model.IsUnderlyingUsed)
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.QuotationUnderlying)
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.PlAbsolute)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlPercentage)
                            </td>
                        </tr>
                    }
                </table>
            </div>
            <div class="col">
                <table class="table table-hover table-striped table-sm">
                    <thead>
                        <tr>
                            <th>
                                @Html.LabelFor(item => Model.Quotation.FirstOrDefault().Quotation)
                            </th>
                            @if (Model.IsUnderlyingUsed)
                            {
                                <th>
                                    @Html.LabelFor(item => Model.Quotation.FirstOrDefault().QuotationUnderlying)
                                </th>
                            }
                            <th>
                                @Html.LabelFor(item => Model.Quotation.FirstOrDefault().PlAbsolute)
                            </th>
                            <th>
                                @Html.LabelFor(item => Model.Quotation.FirstOrDefault().PlPercentage)
                            </th>
                        </tr>
                    </thead>
                    @foreach (var item in Model.LastPart.OrderByDescending(t => t.Quotation))
                    {
                        var styleClass = string.Empty;

                        if (item.IsStoppLoss)
                        {
                            styleClass = "table-danger";
                        }
                        else if (item.IsBuy)
                        {
                            styleClass = "table-success";
                        }
                        else if (item.IsBreakEven)
                        {
                            styleClass = "table-warning";
                        }
                        else if (item.IsTakeProfit)
                        {
                            styleClass = "table-info";
                        }
                        else if (item.IsCurrentQuotation)
                        {
                            styleClass = "table-active";
                        }

                        <tr class="@styleClass">
                            <td>
                                @Html.DisplayFor(modelItem => item.Quotation)
                            </td>
                            @if (Model.IsUnderlyingUsed)
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.QuotationUnderlying)
                                </td>
                            }
                            <td>
                                @Html.DisplayFor(modelItem => item.PlAbsolute)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlPercentage)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
}