@using StockTradingAnalysis.Web
@model StockTradingAnalysis.Web.Models.ImageViewModel

<div class="form-group">
    @if (Model != null)
    {
        @Html.HiddenFor(model => model.Data)
        @Html.HiddenFor(model => model.ContentType)
        @Html.HiddenFor(model => model.OriginalName)

        if (string.IsNullOrEmpty(Model.Description))
        {
            @Resources.ViewTextTransactionsImage
        }
        else
        {
            @Model.Description
        }
        <br />
        <img src="@string.Format("../GetImage/{0}", Model.Id)" style="width: 100%" />
        <br />
    }
    else
    {
        @Resources.ViewTextTransactionsAddImage
        <br />
    }
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Description)
    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
</div>

@if (Model != null && !string.IsNullOrEmpty(Model.ContentType))
{
    <div class="form-check">
        <label class="form-check-label">
            <input class="form-check-input" type="checkbox" value="true" name="deleteImage" />
            @Resources.Display_ImageDeleteImage
        </label>
    </div>
}

<div class="form-group">
    <label>@Resources.ViewTextTransactionsImageFile</label>
    <input class="form-control-file" type="file" id="image" name="Image" />
</div>
