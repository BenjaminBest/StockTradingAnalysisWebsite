@using StockTradingAnalysis.Web.Models
@model StockTradingAnalysis.Web.Models.CalculationViewModel

@{
    ViewBag.Title = Resources.ViewTextCalculationTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var result = (CalculationResultViewModel)ViewBag.CalculationResult;
}

<script type="text/javascript">
    function getStatistics() {

        var calculation = new Object();
            calculation.Multiplier = $("#Multiplier").val();
            calculation.StrikePrice = $("#StrikePrice").val();
            calculation.InitialSL = $("#InitialSl").val();
            calculation.InitialTP = $("#InitialTp").val();
            calculation.PricePerUnit = $("#PricePerUnit").val();
            calculation.OrderCosts = $("#OrderCosts").val();
            calculation.Units = $("#Units").val();
            calculation.WKN = $("#Wkn").val();
            calculation.IsLong = document.getElementById("IsLong").checked;

        $.ajax({
            url: '@Url.Action("GetStatistics", "Calculation")',
            data: calculation ,
            dataType: "json",
            type: "POST",
            error: function () {
                alert("An error occurred.");
            },
            success: function (data) {
                document.getElementById('CalculationResults').innerHTML = data.Result;
            }
        });
    }

    function getPriceFromUnderlying(underlyingPrice, multiplier, strikePrice, isLong) {
        $.ajax({
            url: '@Url.Action("CalculatePriceFromUnderlying", "Calculation")',
            data: { 'underlyingPrice': underlyingPrice, 'multiplier': multiplier, 'strikePrice': strikePrice, 'isLong': isLong },
            dataType: "json",
            type: "POST",
            error: function () {
                alert("An error occurred.");
            },
            success: function (data) {
                document.getElementById('UnderlyingResult').innerHTML = data;
            }
        });
    }

    $(function () { $("#Multiplier").keyup(function () { getStatistics(); }); });
    $(function () { $("#StrikePrice").keyup(function () { getStatistics(); }); });
    $(function () { $("#InitialSl").keyup(function () { getStatistics(); }); });
    $(function () { $("#InitialTp").keyup(function () { getStatistics(); }); });
    $(function () { $("#PricePerUnit").keyup(function () { getStatistics(); }); });
    $(function () { $("#OrderCosts").keyup(function () { getStatistics(); }); });
    $(function () { $("#Units").keyup(function () { getStatistics(); }); });
    $(function () { $("#IsLong").change(function () { getStatistics(); }); });

    $(function () { $("#UnderlyingCalc").keyup(function () { getPriceFromUnderlying($("#UnderlyingCalc").val(), $("#Multiplier").val(), $("#StrikePrice").val(), document.getElementById("IsLong").checked); }); });
</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="alert alert-dismissible alert-success">
                @Resources.ViewTextCalculation
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.OriginalVersion)

    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name)
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Wkn)
                    @Html.EditorFor(model => model.Wkn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Wkn)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsLong)
                    @Html.EditorFor(model => model.IsLong, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsLong)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Multiplier)
                    @Html.EditorFor(model => model.Multiplier, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Multiplier)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StrikePrice)
                    @Html.EditorFor(model => model.StrikePrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StrikePrice)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Underlying)
                    @Html.EditorFor(model => model.Underlying, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Underlying)
                </div>

                <div class="form-group redPerf">
                    @Html.LabelFor(model => model.InitialSl)
                    @Html.EditorFor(model => model.InitialSl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InitialSl)
                </div>

                <div class="form-group bluePerf">
                    @Html.LabelFor(model => model.InitialTp)
                    @Html.EditorFor(model => model.InitialTp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InitialTp)
                </div>

                <input type="submit" value="@Resources.ViewTextSave" class="btn btn-success" />
                @Html.ActionLink("Update Quotations", "UpdateQuotationByWkn", "Stock", new { wkn = Model.Wkn }, new { @class = "btn btn-secondary" })
                @Html.ActionLink(Resources.ViewTextBack, "Index", null, new { @class = "btn btn-info" })

            </div>
            <div class="col-lg-4">

                <div class="form-group">
                    @Html.LabelFor(model => model.Units)
                    @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Units)
                </div>

                <div class="form-group greenPerf">
                    @Html.LabelFor(model => model.PricePerUnit)
                    @Html.EditorFor(model => model.PricePerUnit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PricePerUnit)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OrderCosts)
                    @Html.EditorFor(model => model.OrderCosts, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderCosts)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description)
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", rows = 11 } })
                    @Html.ValidationMessageFor(model => model.Description)
                </div>

                <div class="form-group">
                    <label>@Resources.ViewTextCalculationUnderlyingCalc</label>
                    @Html.Editor("UnderlyingCalc", new { htmlAttributes = new { @class = "form-control" } })<div id="UnderlyingResult"></div>
                </div>

            </div>

            <div class="col">
                <div id="CalculationResults">
                    @Html.Partial("ViewModelCalculationResult", result)
                </div>
            </div>

        </div>
    </div>
}
