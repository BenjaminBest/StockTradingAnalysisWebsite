@model StockTradingAnalysis.Web.Models.CalculationResultViewModel

@if (Model != null && Model.Quotation != null && Model.Quotation.Count != 0)
{
    <div>
        @Html.LabelFor(model => Model.Crv):
        @Html.DisplayFor(model => Model.Crv)

        @Html.LabelFor(model => Model.PositionSize):
        @Html.DisplayFor(model => Model.PositionSize)

        @Html.LabelFor(model => Model.PointsToSl):
        @Html.DisplayFor(model => Model.PointsToSl)

        @Html.LabelFor(model => Model.PointsToBe):
        @Html.DisplayFor(model => Model.PointsToBe)

        @Html.LabelFor(model => Model.PointsToTp):
        @Html.DisplayFor(model => Model.PointsToTp)

        @Html.LabelFor(model => Model.Atr):
        @Html.DisplayFor(model => Model.Atr)
    </div>

    <table id="table_small" style="float:left;margin: 0 10px 0 0">
        <thead>
            <tr>
                <th>
                    @Html.LabelFor(item => Model.Quotation.FirstOrDefault().Quotation)
                </th>
                @if (Model.IsUnderlyingUsed)
                {
                    <th>
                        @Html.LabelFor(item => Model.Quotation.FirstOrDefault().QuotationUnderlying)
                    </th>
                }
                <th>
                    @Html.LabelFor(item => Model.Quotation.FirstOrDefault().PlAbsolute)
                </th>
                <th>
                    @Html.LabelFor(item => Model.Quotation.FirstOrDefault().PlPercentage)
                </th>
            </tr>
        </thead>
        @foreach (var item in Model.FirstPart)
        {
            var styleClass = string.Empty;

            if (item.IsStoppLoss)
            {
                styleClass = "row_red";
            }
            else if (item.IsBuy)
            {
                styleClass = "row_green";
            }
            else if (item.IsBreakEven)
            {
                styleClass = "row_orange";
            }
            else if (item.IsTakeProfit)
            {
                styleClass = "row_blue";
            }
            else if (item.IsCurrentQuotation)
            {
                styleClass = "row_white";
            }

            <tr class="@styleClass">
                <td>
                    @Html.DisplayFor(modelItem => item.Quotation)
                </td>
                @if (Model.IsUnderlyingUsed)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.QuotationUnderlying)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.PlAbsolute)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlPercentage)
                </td>
            </tr>
        }
    </table>

    <table id="table_small">
        <thead>
            <tr>
                <th>
                    @Html.LabelFor(item => Model.Quotation.FirstOrDefault().Quotation)
                </th>
                @if (Model.IsUnderlyingUsed)
                {
                    <th>
                        @Html.LabelFor(item => Model.Quotation.FirstOrDefault().QuotationUnderlying)
                    </th>
                }
                <th>
                    @Html.LabelFor(item => Model.Quotation.FirstOrDefault().PlAbsolute)
                </th>
                <th>
                    @Html.LabelFor(item => Model.Quotation.FirstOrDefault().PlPercentage)
                </th>
            </tr>
        </thead>
        @foreach (var item in Model.LastPart.OrderByDescending(t => t.Quotation))
        {
            var styleClass = string.Empty;

            if (item.IsStoppLoss)
            {
                styleClass = "row_red";
            }
            else if (item.IsBuy)
            {
                styleClass = "row_green";
            }
            else if (item.IsBreakEven)
            {
                styleClass = "row_orange";
            }
            else if (item.IsTakeProfit)
            {
                styleClass = "row_blue";
            }
            else if (item.IsCurrentQuotation)
            {
                styleClass = "row_white";
            }

            <tr class="@styleClass">
                <td>
                    @Html.DisplayFor(modelItem => item.Quotation)
                </td>
                @if (Model.IsUnderlyingUsed)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.QuotationUnderlying)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.PlAbsolute)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlPercentage)
                </td>
            </tr>
        }
    </table>
}