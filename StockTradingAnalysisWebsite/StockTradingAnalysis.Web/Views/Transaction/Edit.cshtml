@using StockTradingAnalysis.Web
@using StockTradingAnalysis.Web.Models
@model TransactionViewModel
@{
    ViewBag.Title = Resources.ViewTextTransactionsTitle;
    var feedbacks = (IEnumerable<SelectListItem>)ViewBag.Feedbacks;
    var strategies = (IEnumerable<SelectListItem>)ViewBag.Strategies;

    var buy = Model as TransactionBuyingViewModel;
    var sell = Model as TransactionSellingViewModel;
    var dividend = Model as TransactionDividendViewModel;

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(function () { $('#Tag').autocomplete({ source: '@Url.Action("GetTags")', minLength: 1 }); });
</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="alert alert-dismissible alert-success">
                @Html.DisplayFor(model => model.Action) @Resources.ViewTextTransactions
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.OriginalVersion)

    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderDate)
                    @Html.EditorFor(model => model.OrderDate, new { @readonly = true })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Units)
                    @Html.EditorFor(model => model.Units, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                </div>

                <div class="form-group greenPerf">
                    @Html.LabelFor(model => model.PricePerUnit)
                    @Html.EditorFor(model => model.PricePerUnit, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OrderCosts)
                    @Html.EditorFor(model => model.OrderCosts, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                </div>

                @if (sell != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => sell.Taxes)
                        @Html.EditorFor(model => sell.Taxes, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    </div>
                }
                else if (dividend != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => dividend.Taxes)
                        @Html.EditorFor(model => dividend.Taxes, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Tag)
                    @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                </div>

                @if (buy != null)
                {
                    <div class="form-group bluePerf">
                        @Html.LabelFor(model => buy.InitialTP)
                        @Html.EditorFor(model => buy.InitialTP, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    </div>

                    <div class="form-group redPerf">
                        @Html.LabelFor(model => buy.InitialSL)
                        @Html.EditorFor(model => buy.InitialSL, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    </div>
                }

                @if (sell != null)
                {

                    <div class="form-group">
                        @Html.LabelFor(model => sell.MFE)
                        @Html.EditorFor(model => sell.MFE, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => sell.MAE)
                        @Html.EditorFor(model => sell.MAE, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    </div>
                }
            </div>
            <div class="col-lg-4">

                <div class="form-group">
                    @Html.LabelFor(model => model.Stock)
                    @Html.ActionLink(Model.Stock.StocksShortDescription, "Edit", "Stock", new { id = Model.Stock.Id }, new { @class = "form-control btn btn-primary" })
                </div>

                @if (buy != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => buy.Strategy)
                        @Html.DropDownListFor(model => buy.Strategy.Id, strategies, new { @class = "custom-select" })
                        @Html.ValidationMessageFor(model => buy.Strategy.Id)
                    </div>
                }

                @if (sell != null)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => sell.Feedback)
                        @Html.DropDownListFor(model => sell.Feedback, feedbacks, new { @class = "custom-select", multiple = "" })
                        @Html.ValidationMessageFor(model => buy.Strategy)
                    </div>
                }

                <div class="form-group">
                    @Html.LabelFor(model => model.Description)
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", rows = 15 } })
                    @Html.ValidationMessageFor(model => model.Description)
                </div>

            </div>
            <div class="col-lg-3">

                @Html.EditorFor(model => model.Image)

            </div>
        </div>
        <input type="submit" value="@Resources.ViewTextSave" class="btn btn-success" />
        @Html.ActionLink(Resources.ViewTextBack, "Index", null, new { @class = "btn btn-info" })
    </div>
}
