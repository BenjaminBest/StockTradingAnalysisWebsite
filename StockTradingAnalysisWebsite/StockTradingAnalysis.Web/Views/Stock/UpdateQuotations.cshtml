@using StockTradingAnalysis.Web
@using StockTradingAnalysis.Web.Common.Extensions
@model StockTradingAnalysis.Web.Models.UpdateQuotationsViewModel

@{
    ViewBag.Title = Resources.ViewTextStockTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";

    var cssClass = Model.IsServiceAvailable ? "alert-success" : "alert-danger";
}

@*@Scripts.Render("~/bundles/custom") //TODO: Was not in the bundles.config*@

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="alert alert-dismissible @cssClass">
                @if (Model.IsServiceAvailable)
                {
                    @Html.Raw(@Resources.ViewTextUpdateQuotationsServiceOnline)
                }
                else
                {
                    @Html.Raw(@Resources.ViewTextUpdateQuotationsServiceOffline)
                }
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.Stocks.FirstOrDefault().Name)
                    </th>
                    <th>
                        @Html.LabelFor(model => model.Stocks.FirstOrDefault().Wkn)
                    </th>
                    <th>
                        @Html.LabelFor(model => model.Stocks.FirstOrDefault().Type)
                    </th>
                    <th>
                        @Resources.Display_StockUpdateStatus
                    </th>
                </tr>
            </thead>

            @foreach (var item in Model.Stocks)
            {
                <tr class="clickableRow" href='@Html.PlainLink("Edit", "Stock", new { id = item.Id })'>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Wkn)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @if (Model.IsServiceAvailable)
                        {
                            <div class="partialContents" data-url="@Url.Action("UpdateQuotation", "Stock", new {id = item.Id})"></div>
                        }
                    </td>
                </tr>
            }

        </table>
    </div>
</div>